

<!-- Bootstrap Bundle with Popper -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
<!-- jQuery (required for some plugins) -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<!-- SweetAlert2 -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<!-- Toast Utility -->
<script src="/js/toast-utility.js"></script>
<!-- Chart.js (for dashboard charts) -->
<script src="https://cdn.jsdelivr.net/npm/chart.js@3.7.1/dist/chart.min.js"></script>

<!-- Process flash messages -->
<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Process URL parameters for toast notifications
        const urlParams = new URLSearchParams(window.location.search);
        if (urlParams.has('flash_type') && urlParams.has('flash_message')) {
            const type = urlParams.get('flash_type');
            const message = urlParams.get('flash_message');
            showToast(type, message);
            
            // Clean URL
            const url = new URL(window.location);
            url.searchParams.delete('flash_type');
            url.searchParams.delete('flash_message');
            window.history.replaceState({}, document.title, url);
        }
        
        // Process flash messages in the container
        const flashMessages = document.querySelectorAll('.flash-message');
        flashMessages.forEach(function(flashMsg) {
            const type = flashMsg.dataset.type;
            const message = flashMsg.textContent;
            if (message.trim()) {
                showToast(type, message);
            }
        });
    });
    
    // Toast notification function 
    function showToast(type, message) {
        // Use the toast-utility.js if available
        if (typeof showToastNotification === 'function') {
            showToastNotification(type, message);
            return;
        }
        
        // Fallback to SweetAlert2
        const Toast = Swal.mixin({
            toast: true,
            position: 'top-end',
            showConfirmButton: false,
            timer: 3000,
            timerProgressBar: true,
            didOpen: (toast) => {
                toast.addEventListener('mouseenter', Swal.stopTimer);
                toast.addEventListener('mouseleave', Swal.resumeTimer);
            }
        });
        
        Toast.fire({
            icon: type === 'error' ? 'error' : 
                 type === 'warning' ? 'warning' : 
                 type === 'info' ? 'info' : 'success',
            title: message
        });
    }
</script> 